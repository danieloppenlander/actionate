// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mongodb"
  url = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String?
  email String? @unique
  emailVerified DateTime?
  image String?
  goals Goal[]
  accounts Account[]
  sessions Session[]
}

model Goal {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String
  title String
  description String?
  isDaily Boolean @default(false)
  isCompleted Boolean @default(false)

  user User @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model Account {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String
  type String
  provider String
  providerAccountId String
  refresh_token String? @db.String @map("refreshToken")
  access_token String? @db.String @map("accessToken")
  expires_at Int? @map("expiresAt")
  token_type String? @map("tokenType")
  scope String?
  id_token String? @db.String @map("idToken")
  session_state String? @map("sessionState")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String @unique
  userId String
  expires DateTime
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token String @unique
  expires DateTime

  @@unique([identifier, token])
}